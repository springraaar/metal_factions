#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  lflare, rflare, base, tail, aimh, aimv, jet, jet2,lflare2, rflare2;

static-var  gun_1;

// Signal definitions
#define SIG_MOVE			2
#define SIG_AIM				4

Create()
{
	gun_1 = [0];
	return (0);
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 256 | 3 from jet;
		emit-sfx 256 | 3 from jet2;
		sleep 250;
	}
	return (0);
}

StopMoving()
{
	signal SIG_MOVE;
	return (0);
}

RestoreAfterDelay()
{
	sleep DEFAULT_WEAPON_RESTORE_DELAY;
	turn aimh to y-axis <0.000000> speed <80.000000>;
	turn aimv to x-axis <0.000000> speed <80.000000>;	
	
}


FirePrimary()
{
	if(gun_1 == [0])
	{
		gun_1 = [1];
		return (0);
	}
	if(gun_1 == [1])
	{
		gun_1 = [2];
		return (0);
	}		
	if(gun_1 == [2])
	{
		gun_1 = [3];
		return (0);
	}		
	if(gun_1 == [3])
	{
		gun_1 = [0];
		return (0);
	}				
}

AimPrimary(heading, pitch)
{
	// heading and pitch check
	if(heading > <60.000000> || heading < <-60.000000>)
	{
		return (0);
	}
	if(pitch > <60.000000> || pitch < <-60.000000>)
	{
		return (0);
	}
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	
	turn aimh to y-axis heading speed <100.000000>;
	turn aimv to x-axis <0.000000>-pitch speed <100.000000>;
	wait-for-turn aimh around y-axis;
	wait-for-turn aimv around x-axis;
	
	start-script RestoreAfterDelay();
	return (1);
}


AimFromPrimary( piecenum)
{
	piecenum = aimh;
}

QueryPrimary(piecenum)
{
	if(gun_1 == [0])
	{
		piecenum = lflare;
	}
	if(gun_1 == [1])
	{
		piecenum = rflare;
	}
	if(gun_1 == [2])
	{
		piecenum = lflare2;
	}
	if(gun_1 == [3])
	{
		piecenum = rflare2;
	}	
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 50 )
	{
		explode tail type BITMAPONLY | BITMAP4;
		return (1);
	}
	explode base type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode tail type SHATTER;
	return (2);
}
