#define TA			// This is a TA script


#define MAX_CHARGES				1000

#include "sfxtype.h"
#include "exptype.h"

piece  base, b2,b3,clighton,clightoff,d2,b4;

static-var  charges,excessCharges;

lua_chargeUpdated() { return 0; }


updateActivationLevel() {
	while( TRUE ) {
	
		while( get BUILD_PERCENT_LEFT ) {
			sleep 100;
		}
		if ( charges >= MAX_CHARGES) {
			show clighton;
			hide clightoff;
		} else {
			hide clighton;
			show clightoff;
		}
		sleep 100;
	}
}

// add charges, charges greater than the cap are discarded
addCharges(chargesToAdd) {
	charges = charges + chargesToAdd;
	//get PRINT(charges)
	if (charges > MAX_CHARGES) {
		excessCharges = charges - MAX_CHARGES;
		charges = MAX_CHARGES;
	}
	call-script lua_chargeUpdated(charges,MAX_CHARGES,excessCharges);
	excessCharges = 0;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Create()
{
	start-script SmokeUnit();
	charges = 0;
	
	start-script updateActivationLevel();
	return (0);
}


Killed(severity, corpsetype)
{
	if( severity <= 50 )
	{
		explode b2 type SHATTER;
		explode d2 type SHATTER;
		return (1);
	}

	explode d2 type SHATTER;
	explode b2 type SHATTER;
	explode b3 type SHATTER;
	explode b4 type SHATTER;
	
	return (2);
}