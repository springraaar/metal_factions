#define TAK			// This is a TAK script

#include "sfxtype.h"
#include "exptype.h"

#define SPEEDUP_FACTOR 280
#define RESTORE_DELAY	3000

#define HEADING_TOLERANCE	<30>
#define PITCH_TOLERANCE		<25>


piece  torso, luparm, larm, lgun, lg1,lflare1, ruparm, rarm, rgun, rg1, rflare1, pelvis, head, lthigh, rthigh, rleg, lleg, lfoot, rfoot;

static-var  bMoving, bAiming, firept1, mASpdFactor, moveSpd1, turnSpd1, turnSpd2, turnSpd3;

#include "aimhelper1.h"

// signal definition
#define SIG_AIM		2


MotionSpeedControl(maxSpeed,currentSpeed)
{
	maxSpeed = get MAX_SPEED;
	currentSpeed = 0;
	mASpdFactor = SPEEDUP_FACTOR;
	
	while(TRUE)
	{
		currentSpeed = get CURRENT_SPEED;
		mASpdFactor = SPEEDUP_FACTOR * currentSpeed / maxSpeed;

		//call-script lua_cobDebug(mASpdFactor);
		if ( mASpdFactor < SPEEDUP_FACTOR/2 )
		{
			mASpdFactor = SPEEDUP_FACTOR/2;
		}
		
		
		moveSpd1 = [20.000000] * mASpdFactor / 100;
		turnSpd1 = <315.000000> * (100 + mASpdFactor) / 200;
		turnSpd2 = <200.000000> * (100 + mASpdFactor) / 200;
		turnSpd3 = <50.000000> * (100 + mASpdFactor) / 200;

		sleep 60;
	}
}


walk()
{
	if( bMoving)
	{
		move pelvis to y-axis [-1.750000] speed moveSpd1;
		move head to y-axis [0.000000] speed moveSpd1;
		turn pelvis to x-axis <6.692308> speed turnSpd3;
		turn lthigh to x-axis <-41.791209> speed turnSpd2;
		turn rthigh to x-axis <17.593407> speed turnSpd2;
		turn rleg to x-axis <39.390110> speed turnSpd1;
		turn lleg to x-axis <41.791209> speed turnSpd1;
		if (!bAiming) {
			turn torso to y-axis <4.192308> speed turnSpd3;
			turn ruparm to x-axis <-11.192308> speed turnSpd2;
			turn luparm to x-axis <11.192308> speed turnSpd2;
			turn lgun to x-axis <36.791209> speed turnSpd2;
			turn rgun to x-axis <36.791209> speed turnSpd2;
		}
		sleep 40 * 100 / mASpdFactor;
	}
	if( bMoving)
	{
		if (!bAiming) {
			turn torso to y-axis <3.890110> speed turnSpd3;
			turn ruparm to x-axis <-13.390110> speed turnSpd3;
			turn luparm to x-axis <12.291209> speed turnSpd3;
		}
		sleep 40 * 100 / mASpdFactor;
	}
	if( bMoving)
	{
		move pelvis to y-axis [-1.500000] speed moveSpd1;
		turn pelvis to x-axis <5.291209> speed turnSpd3;
		turn lthigh to x-axis <-29.500000> speed turnSpd2;
		turn rthigh to x-axis <8.791209> speed turnSpd2;
		turn rleg to x-axis <51.692308> speed turnSpd1;
		turn lleg to x-axis <28.500000> speed turnSpd1;
		if (!bAiming) {
			turn torso to y-axis <3.192308> speed turnSpd3;
			turn ruparm to x-axis <-8.093407> speed turnSpd3;
			turn luparm to x-axis <6.291209> speed turnSpd3;
		}
		sleep 100 * 100 / mASpdFactor;
	}
	if( bMoving)
	{
		move pelvis to y-axis [-0.750000] speed moveSpd1;
		turn pelvis to x-axis <4.593407> speed turnSpd3;
		turn lthigh to x-axis <-16.192308> speed turnSpd2;
		turn rthigh to x-axis <0.000000> speed turnSpd2;
		turn rleg to x-axis <58.000000> speed turnSpd1;
		turn lleg to x-axis <16.192308> speed turnSpd1;
		if (!bAiming) {
			turn torso to y-axis <1.390110> speed turnSpd3;
			turn ruparm to x-axis <-3.192308> speed turnSpd3;
			turn luparm to x-axis <0.000000> speed turnSpd3;
		}
		sleep 90 * 100 / mASpdFactor;
	}
	if( bMoving)
	{
		move pelvis to y-axis [0.000000] speed moveSpd1;
		turn pelvis to x-axis <3.500000> speed turnSpd3;
		turn lthigh to x-axis <7.000000> speed turnSpd2;
		turn rthigh to x-axis <-6.291209> speed turnSpd2;
		turn rleg to x-axis <44.291209> speed turnSpd1;
		turn lleg to x-axis <5.593407> speed turnSpd1;
		if (!bAiming) {
			turn torso to y-axis <0.000000> speed turnSpd3;
			turn ruparm to x-axis <3.192308> speed turnSpd3;
			turn luparm to x-axis <-6.291209> speed turnSpd3;
		}
		sleep 90 * 100 / mASpdFactor;
	}
	if( bMoving)
	{
		move pelvis to y-axis [-0.500000] speed moveSpd1;
		turn pelvis to x-axis <4.593407> speed turnSpd3;
		turn lthigh to x-axis <10.890110> speed turnSpd2;
		turn rthigh to x-axis <-34.500000> speed turnSpd2;
		turn rleg to x-axis <71.390110> speed turnSpd1;
		turn lleg to x-axis <20.000000> speed turnSpd1;
		if (!bAiming) {
			turn torso to y-axis <-1.390110> speed turnSpd3;
			turn ruparm to x-axis <6.692308> speed turnSpd3;
			turn luparm to x-axis <-8.093407> speed turnSpd3;
		}
		sleep 80 * 100 / mASpdFactor;
	}
	if( bMoving)
	{
		move pelvis to y-axis [-0.750000] speed moveSpd1;
		turn lthigh to x-axis <13.000000> speed turnSpd2;
		turn rthigh to x-axis <-42.890110> speed turnSpd2;
		turn rleg to x-axis <54.500000> speed turnSpd1;
		if (!bAiming) {
			turn torso to y-axis <-2.500000> speed turnSpd3;
			turn ruparm to x-axis <8.390110> speed turnSpd3;
			turn luparm to x-axis <-9.093407> speed turnSpd3;
		}
		sleep 70 * 100 / mASpdFactor;
	}
	if( bMoving)
	{
		move pelvis to y-axis [-1.000000] speed moveSpd1;
		turn pelvis to x-axis <5.291209> speed turnSpd3;
		turn lthigh to x-axis <16.890110> speed turnSpd2;
		turn rthigh to x-axis <-48.192308> speed turnSpd2;
		turn rleg to x-axis <34.500000> speed turnSpd1;
		turn lleg to x-axis <20.000000> speed turnSpd1;
		if (!bAiming) {
			turn torso to y-axis <-3.192308> speed turnSpd3;
			turn ruparm to x-axis <10.192308> speed turnSpd3;
			turn luparm to x-axis <-10.192308> speed turnSpd3;
		}
		sleep 80 * 100 / mASpdFactor;
	}
	if( bMoving)
	{
		move pelvis to y-axis [-1.750000] speed moveSpd1;
		turn pelvis to x-axis <6.692308> speed turnSpd3;
		turn lthigh to x-axis <15.500000> speed turnSpd2;
		turn rthigh to x-axis <-40.390110> speed turnSpd2;
		turn rleg to x-axis <40.390110> speed turnSpd1;
		turn lleg to x-axis <30.593407> speed turnSpd1;
		if (!bAiming) {
			turn torso to y-axis <-4.192308> speed turnSpd3;
			turn ruparm to x-axis <11.192308> speed turnSpd3;
			turn luparm to x-axis <-11.192308> speed turnSpd3;
		}
		sleep 40 * 100 / mASpdFactor;
	}
	if( bMoving)
	{
		if (!bAiming) {
			turn ruparm to x-axis <13.390110> speed turnSpd3;
			turn luparm to x-axis <-12.291209> speed turnSpd3;
		}
		sleep 40 * 100 / mASpdFactor;
	}
	if( bMoving)
	{
		move pelvis to y-axis [-1.500000] speed moveSpd1;
		turn pelvis to x-axis <5.291209> speed turnSpd3;
		turn lthigh to x-axis <9.500000> speed turnSpd2;
		turn rthigh to x-axis <-34.500000> speed turnSpd2;
		turn lleg to x-axis <43.890110> speed turnSpd1;
		if (!bAiming) {
			turn torso to y-axis <-3.192308> speed turnSpd3;
			turn ruparm to x-axis <8.390110> speed turnSpd3;
			turn luparm to x-axis <-8.390110> speed turnSpd3;
		}
		sleep 100 * 100 / mASpdFactor;
	}
	if( bMoving)
	{
		move pelvis to y-axis [-0.750000] speed moveSpd1;
		turn pelvis to x-axis <4.593407> speed turnSpd3;
		turn lthigh to x-axis <0.692308> speed turnSpd2;
		turn rthigh to x-axis <-26.390110> speed turnSpd2;
		turn lleg to x-axis <54.500000> speed turnSpd1;
		if (!bAiming) {
			turn torso to y-axis <-1.791209> speed turnSpd3;
			turn ruparm to x-axis <3.192308> speed turnSpd3;
			turn luparm to x-axis <-3.192308> speed turnSpd3;
		}
		sleep 90 * 100 / mASpdFactor;
	}
	if( bMoving)
	{
		move pelvis to y-axis [0.000000] speed moveSpd1;
		turn pelvis to x-axis <3.500000> speed turnSpd3;
		turn lthigh to x-axis <-16.890110> speed turnSpd2;
		turn rthigh to x-axis <3.890110> speed turnSpd2;
		turn rleg to x-axis <8.093407> speed turnSpd1;
		turn lleg to x-axis <60.500000> speed turnSpd1;
		if (!bAiming) {
			turn torso to y-axis <0.000000> speed turnSpd3;
			turn ruparm to x-axis <-3.192308> speed turnSpd3;
			turn luparm to x-axis <3.890110> speed turnSpd3;
		}
		sleep 80 * 100 / mASpdFactor;
	}
	if( bMoving)
	{
		move pelvis to y-axis [-0.500000] speed moveSpd1;
		turn pelvis to x-axis <4.593407> speed turnSpd3;
		turn lthigh to x-axis <-29.500000> speed turnSpd2;
		turn rthigh to x-axis <10.192308> speed turnSpd2;
		turn rleg to x-axis <26.000000> speed turnSpd1;
		turn lleg to x-axis <56.291209> speed turnSpd1;
		if (!bAiming) {
			turn torso to y-axis <1.791209> speed turnSpd3;
			turn ruparm to x-axis <-6.692308> speed turnSpd3;
			turn luparm to x-axis <8.791209> speed turnSpd3;
		}
		sleep 80 * 100 / mASpdFactor;
	}
	if( bMoving)
	{
		move pelvis to y-axis [-0.750000] speed moveSpd1;
		turn lthigh to x-axis <-43.890110> speed turnSpd2;
		turn rthigh to x-axis <12.291209> speed turnSpd2;
		turn lleg to x-axis <55.890110> speed turnSpd1;
		if (!bAiming) {
			turn torso to y-axis <2.500000> speed turnSpd3;
			turn ruparm to x-axis <-7.000000> speed turnSpd3;
			turn luparm to x-axis <9.791209> speed turnSpd3;
		}
		sleep 70 * 100 / mASpdFactor;
	}
	if (bMoving) {
		move pelvis to y-axis [-1.000000] speed moveSpd1;
		turn pelvis to x-axis <5.291209> speed turnSpd3;
		turn lthigh to x-axis <-43.890110> speed turnSpd2;
		turn rthigh to x-axis <14.390110> speed turnSpd2;
		turn lleg to x-axis <25.692308> speed turnSpd1;
		if (!bAiming) {
			turn torso to y-axis <3.192308> speed turnSpd3;
			turn ruparm to x-axis <-8.791209> speed turnSpd3;
			turn luparm to x-axis <10.192308> speed turnSpd3;
		}
		sleep 80 * 100 / mASpdFactor;
	}
	return;
}


MotionControl()
{
	var moving, aiming, justMoved;
	justMoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			justMoved = TRUE;
			call-script walk();
		}
		if( !moving )
		{
			if( justMoved )
			{
				turn pelvis to x-axis <0.000000> speed <200.000000>;
				move pelvis to y-axis [0.000000] speed [10.000000];
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				justMoved = FALSE;
			}
			sleep 100;
		}
	}
	return;
}

Create()
{
	bMoving = FALSE;
	bAiming = FALSE;
	firept1 = 0;
	call-script stopAimHelper1(<1000>,<1000>);
	start-script MotionSpeedControl();
	start-script MotionControl();
	return;
}

StartMoving()
{
	bMoving = TRUE;
	return;
}

StopMoving()
{
	bMoving = FALSE;
	return;
}


RestorePosition()
{
	sleep RESTORE_DELAY;
	call-script stopAimHelper1(<290>,<240>);
	turn torso to y-axis <0.000000> speed <290.000000>;
	turn ruparm to x-axis <0.000000> speed <245.000000>;
	turn luparm to x-axis <0.000000> speed <245.000000>;
	turn rgun to x-axis <0.000000> speed <100.000000> * SPEEDUP_FACTOR / 100;
	turn lgun to x-axis <0.000000> speed <100.000000> * SPEEDUP_FACTOR / 100;
	turn larm to y-axis <0.000000> speed <300.000000>;
	turn rarm to y-axis <0.000000> speed <300.000000>;
	wait-for-turn larm around y-axis;
	wait-for-turn rarm around y-axis;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn rgun around x-axis;
	wait-for-turn lgun around x-axis;
	bAiming = FALSE;
	return;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
	return;
}

QueryPrimary(piecenum)
{
	if (firept1 == 0)
	{
		piecenum = lflare1;
		return 0;
	}
	if (firept1 == 1)
	{
		piecenum = rflare1;
		return 0;
	}
}

AimPrimary(heading, pitch)
{
	call-script updateAimHelper1(heading,pitch,<700>,<740>,HEADING_TOLERANCE,PITCH_TOLERANCE);
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;

	turn torso to y-axis heading speed <700.093407>;
	turn luparm to x-axis <0.000000> - pitch speed <745.000000>;
	turn lgun to x-axis <0.000000> speed <745.000000>;
	turn larm to y-axis <0.000000> speed <700.000000>;
	turn ruparm to x-axis <0.000000> - pitch speed <745.000000>;
	turn rgun to x-axis <0.000000> speed <745.000000>;
	turn rarm to y-axis <0.000000> speed <700.000000>;

	if (!aimReady1)
	{
		wait-for-turn torso around y-axis;
		wait-for-turn luparm around x-axis;
		wait-for-turn larm around y-axis;
		wait-for-turn lgun around x-axis;
		wait-for-turn ruparm around x-axis;
		wait-for-turn rarm around y-axis;
		wait-for-turn rgun around x-axis;
	}
	start-script RestorePosition();
	return (1);
}

Shot1()
{
	if (firept1 == 0)
	{
		emit-sfx 1024 from lflare1;
		sleep 300;
		firept1 = 1;
		return 0;
	}
	if (firept1 == 1)
	{
		emit-sfx 1024 from rflare1;
		sleep 300;
		firept1 = 0;
		return 0;
	}
}



Killed(severity)
{
	if( severity <= 50 )
	{
		explode pelvis type SHATTER;
		explode torso type SHATTER;
		return (1);
	}

	explode pelvis type SHATTER;
	explode torso type SHATTER;
	explode luparm type SHATTER;
	explode ruparm type SHATTER;
	explode lthigh type SHATTER;
	explode rthigh type SHATTER;
	return (2);
}
