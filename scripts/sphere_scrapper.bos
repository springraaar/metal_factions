#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base,hull,bottom,pack1,cover, jp1,ls2,rs2,lflare,rflare;

static-var  isFlying,gun_1;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

Create()
{
	gun_1 = 0;
	isFlying = FALSE;
	start-script SmokeUnit();
}

Activate()
{
	isFlying = TRUE;
}

Deactivate()
{
	isFlying = FALSE;
}

AimPrimary()
{
	if(!isFlying)
	{
		return (0);
	}
	return (1);
}

Shot1()
{
	if (gun_1 == 0) 
	{
		emit-sfx 1024+0 from lflare;
		move ls2 to z-axis [-2] now;
		gun_1 = 1;
		sleep 100;
		move ls2 to z-axis [0] speed [8];
		return (0);
	}
	if (gun_1 == 1) 
	{
		emit-sfx 1024+0 from rflare;
		move rs2 to z-axis [-2] now;
		gun_1 = 0;
		sleep 100;
		move rs2 to z-axis [0] speed [8];
		return (0);
	}
}

QueryPrimary(piecenum)
{
	if (gun_1 == 0)
	{
		piecenum = lflare;
		return (0);
	} 
	else 
	{
		piecenum = rflare;
		return (0);
	}
}


Killed(severity, corpsetype)
{
	explode hull type SHATTER;
	explode bottom type SHATTER;
	return (2);

}
