#define TAK			// This is a TA script


#include "sfxtype.h"
#include "exptype.h"

piece  base, b2,b3,clighton1,clighton2,clighton3,clighton4,clighton5,clightoff,glowpt;

static-var  gridLevel;

lua_playSound() { return 0; }


glowFX() {
	while (TRUE) {
		if ( gridLevel > 4) {
			emit-sfx 1024+1 from glowpt;
		} else if ( gridLevel > 3) {
			emit-sfx 1024 from glowpt;
		}
		sleep 30;
	}
}
updateActivationLevel() {
	while( TRUE ) {
		if( get BUILD_PERCENT_LEFT ) {
			gridLevel = 0;
		}

		if ( gridLevel > 4) {
			show clighton5;
			hide clighton4;
			hide clighton3;
			hide clighton2;
			hide clighton1;
			hide clightoff;
		} else if ( gridLevel > 3) {
			hide clighton5;
			show clighton4;
			hide clighton3;
			hide clighton2;
			hide clighton1;
			hide clightoff;
		} else if ( gridLevel > 2) {
			hide clighton5;
			hide clighton4;
			show clighton3;
			hide clighton2;
			hide clighton1;
			hide clightoff;
		} else if ( gridLevel > 1) {
			hide clighton5;
			hide clighton4;
			hide clighton3;
			show clighton2;
			hide clighton1;
			hide clightoff;
		} else if ( gridLevel > 0) {
			hide clighton5;
			hide clighton4;
			hide clighton3;
			hide clighton2;
			show clighton1;
			hide clightoff;
		} else {
			hide clighton5;
			hide clighton4;
			hide clighton3;
			hide clighton2;
			hide clighton1;
			show clightoff;
		}

		sleep 100;
	}
}

setGridLevel(level, _) {
	if (level > gridLevel) {
		call-script lua_playSound(1,100);
	} else if (level < gridLevel)  {
		call-script lua_playSound(2,100);
	}
	gridLevel = level;
	return(0);
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Create()
{
	gridLevel = 0;
	hide clighton5;
	hide clighton4;
	hide clighton3;
	hide clighton2;
	hide clighton1;
	show clightoff;
	start-script updateActivationLevel();
	start-script glowFX();
	start-script SmokeUnit();
	return (0);
}


Killed(severity, corpsetype)
{
	if( severity <= 50 )
	{
		explode b2 type SHATTER;
		explode b3 type SHATTER;
		return (1);
	}

	explode b2 type SHATTER;
	explode b3 type SHATTER;
	return (2);
}