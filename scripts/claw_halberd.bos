#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SPEEDUP_FACTOR 	80

#define HEADING_TOLERANCE	<25>
#define PITCH_TOLERANCE		<15>

piece  gp, base, flash, turret, holder, sleeve, barrel,base2,l1,l2,l3,l4,farmor,barmor, launcher, tubes, f1,f2, t1, t2, t1cover,t2cover;

static-var  gun_1;

#include "aimhelper1.h"

// Signal definitions
#define SIG_AIM				2

#include "tankthreads.h"

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	gun_1 = [0];
	call-script stopAimHelper1(<1000>,<1000>);
	start-script SmokeUnit();
	start-script AnimateTracks();
}

RestoreAfterDelay()
{
	sleep DEFAULT_WEAPON_RESTORE_DELAY;
	call-script stopAimHelper1(<90>,<90>);
	turn turret to y-axis <0.000000> speed <90.016484>;
	turn sleeve to x-axis <0.000000> speed <90.005495>;
	turn launcher to x-axis <0.000000> speed <90.005495>;
}

AimPrimary(heading, pitch)
{
	call-script updateAimHelper1(heading,pitch,<150>,<150>,HEADING_TOLERANCE,PITCH_TOLERANCE);
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <150.038462>;
	turn sleeve to x-axis <0.000000> - pitch speed <150.000000>;
	if (!aimReady1)
	{
		wait-for-turn turret around y-axis;
		wait-for-turn sleeve around x-axis;
	}
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	move barrel to z-axis [-6.000000] now;
	emit-sfx 1024 from flash;
	sleep 250;
	move barrel to z-axis [0.000000] speed [4.000000];
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = flash;
}
AimSecondary(heading, pitch)
{
	call-script updateAimHelper1(heading,pitch,<150>,<150>,HEADING_TOLERANCE,PITCH_TOLERANCE);
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <150.038462>;
	turn launcher to x-axis <0.000000> - pitch speed <150.000000>;
	if (!aimReady1)
	{
		wait-for-turn turret around y-axis;
		wait-for-turn launcher around x-axis;
	}
	start-script RestoreAfterDelay();
	return (1);
}

FireSecondary()
{
	if( gun_1 == [0])
	{
		emit-sfx 1024+1 from f1;
		sleep 30;
		gun_1 = [1];
		return;
	}
	if( gun_1 == [1])
	{
		emit-sfx 1024+1 from f2;
		sleep 30;
		gun_1 = [0];
		return;
	}
	
}

AimFromSecondary(piecenum)
{
	piecenum = turret;
}

QuerySecondary(piecenum)
{
	if( gun_1 == [0])
	{
		piecenum = f1;
	}
	if( gun_1 == [1])
	{
		piecenum = f2;
	}
}

Killed(severity, corpsetype)
{
	if( severity <= 50 )
	{
		explode barrel type SHATTER;
		explode sleeve type SHATTER;
		explode turret type SHATTER;
		return (1);
	}
	explode barrel type SHATTER;
	explode sleeve type SHATTER;
	explode turret type SHATTER;
	explode t1cover type SHATTER;
	explode t2cover type SHATTER;
	explode farmor type SHATTER;
	explode barmor type SHATTER;
	return (2);
}
