#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SPEEDUP_FACTOR 	80

#define HEADING_TOLERANCE	<25>
#define PITCH_TOLERANCE		<15>

piece  base, flash,turret, sleeve,front, front2,b2,t1, t2,bb, t1cover,t2cover;


#include "aimhelper1.h"

// Signal definitions
#define SIG_AIM				2

#include "tankthreads.h"


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}


RockUnit(anglex, anglez)
{
	anglex = anglex * 100/300;
	anglez = anglez * 100/300;
	turn base to x-axis anglex speed <40.005495>;
	turn base to z-axis <0>-anglez speed <40.005495>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <15.000000>;
	turn base to x-axis <0.000000> speed <15.000000>;
}

Create()
{
	turn sleeve to x-axis <-89.000000> now;
	start-script SmokeUnit();
	start-script AnimateTracks();
	
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	spin front2 around z-axis speed <900.000000>;
}


RestoreAfterDelay()
{
	sleep DEFAULT_WEAPON_RESTORE_DELAY;
	call-script stopAimHelper1(<100>,<100>);
	turn turret to y-axis <0.000000> speed <100.016484>;
	turn sleeve to x-axis <-89.000000> speed <100.005495>;
}

AimPrimary(heading, pitch)
{
	call-script updateAimHelper1(heading,pitch,<100>,<100>,HEADING_TOLERANCE,PITCH_TOLERANCE);
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <100.038462>;
	turn sleeve to x-axis <0.000000> - pitch speed <100.000000>;
	if (!aimReady1)
	{
		wait-for-turn turret around y-axis;
		wait-for-turn sleeve around x-axis;
	}
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	stop-spin front2 around z-axis;
	turn front2 to z-axis <0> now;
	emit-sfx 1024 + 0 from flash;
	sleep 1000;
	spin front2 around z-axis speed <900.000000> accelerate <6.000000>;
	return(1);
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = flash;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 50 )
	{
		explode front type SHATTER;
		explode b2 type SHATTER;
		return (1);
	}
	explode front type SHATTER;
	explode b2 type SHATTER;
	explode t1cover type SHATTER;
	explode t2cover type SHATTER;
	return (2);
}
