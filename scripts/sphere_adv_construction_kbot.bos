#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SPEEDUP_FACTOR 180

piece  GP, base, legs,lfrontleg, lmidleg,rmidleg, rfrontleg,lbackleg,rbackleg, rmid2, rback2, lback2,rfront2,lmid2,lfront2,body,sphere,sphere2, turret,nano1,nano2,beam1,beam2;

static-var  bMoving,bAiming, restore_delay, nanopiece, justmoved, bBuilding;


// Signal definitions
#define SIG_AIM				2



SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}


BuildFX()
{
	while(TRUE)
	{
		if( bBuilding )
		{
			emit-sfx 1024 + 0 from beam1;
			emit-sfx 1024 + 0 from beam2;
		}
		sleep 100;
	}
	return (0);
}

walk()
{
	if( bMoving )
	{
		turn rmid2 to z-axis <0.000000> speed <80.000000> * SPEEDUP_FACTOR / 100;
		turn lmid2 to z-axis <0.000000> speed <80.000000> * SPEEDUP_FACTOR / 100;
		
		turn base to x-axis <2.000000> speed <20.000000> * SPEEDUP_FACTOR / 100;
		turn base to z-axis <-1.000000> speed <15.000000> * SPEEDUP_FACTOR / 100;

		turn lfrontleg to y-axis <20.000000> speed <100.967033> * SPEEDUP_FACTOR / 100;
		turn lfrontleg to z-axis <5.016484> speed <550.104396> * SPEEDUP_FACTOR / 100;

		turn lmidleg to y-axis <-20.000000> speed <300.038462> * SPEEDUP_FACTOR / 100;
		turn lmidleg to z-axis <-15.016484> speed <60.104396> * SPEEDUP_FACTOR / 100;

		turn lbackleg to y-axis <45.060440> speed <120.038462> * SPEEDUP_FACTOR / 100;
		turn lbackleg to z-axis <5.016484> speed <550.104396> * SPEEDUP_FACTOR / 100;
		
		turn rfrontleg to y-axis <40.412088> speed <300.060440> * SPEEDUP_FACTOR / 100;
		turn rfrontleg to z-axis <15.016484> speed <60.104396> * SPEEDUP_FACTOR / 100;
		
		turn rmidleg to y-axis <-20.093407> speed <100.368132> * SPEEDUP_FACTOR / 100;
		turn rmidleg to z-axis <-5.016484> speed <550.104396> * SPEEDUP_FACTOR / 100;
		
		turn rbackleg to y-axis <15.137363> speed <300.681319> * SPEEDUP_FACTOR / 100;
		turn rbackleg to z-axis <15.016484> speed <60.104396> * SPEEDUP_FACTOR / 100;
		
		
		sleep 200 * 100 / SPEEDUP_FACTOR;
	}

	// only vertical
	if( bMoving )
	{
		//turn lfrontleg to z-axis <-15.016484> speed <60.104396> * SPEEDUP_FACTOR / 100;

		turn lmidleg to z-axis <5.016484> speed <150.104396> * SPEEDUP_FACTOR / 100;

		//turn lbackleg to z-axis <-15.016484> speed <60.104396> * SPEEDUP_FACTOR / 100;

		turn rfrontleg to z-axis <-5.016484> speed <150.104396> * SPEEDUP_FACTOR / 100;
		
		//turn rmidleg to z-axis <15.016484> speed <60.104396> * SPEEDUP_FACTOR / 100;
		
		turn rbackleg to z-axis <-5.016484> speed <150.104396> * SPEEDUP_FACTOR / 100;
		
		sleep 200 * 100 / SPEEDUP_FACTOR;
	}
	
	
	if( bMoving )
	{
		turn base to x-axis <-2.000000> speed <20.000000> * SPEEDUP_FACTOR / 100;
		turn base to z-axis <1.000000> speed <15.000000> * SPEEDUP_FACTOR / 100;

		turn lfrontleg to y-axis <-40.000000> speed <300.967033> * SPEEDUP_FACTOR / 100;
		turn lfrontleg to z-axis <-15.016484> speed <60.104396> * SPEEDUP_FACTOR / 100;

		turn lmidleg to y-axis <20.000000> speed <100.038462> * SPEEDUP_FACTOR / 100;
		turn lmidleg to z-axis <5.016484> speed <550.104396> * SPEEDUP_FACTOR / 100;

		turn lbackleg to y-axis <-15.060440> speed <300.038462> * SPEEDUP_FACTOR / 100;
		turn lbackleg to z-axis <-15.016484> speed <60.104396> * SPEEDUP_FACTOR / 100;

		turn rfrontleg to y-axis <-20.412088> speed <100.060440> * SPEEDUP_FACTOR / 100;
		turn rfrontleg to z-axis <-5.016484> speed <550.104396> * SPEEDUP_FACTOR / 100;
		
		turn rmidleg to y-axis <20.093407> speed <300.368132> * SPEEDUP_FACTOR / 100;
		turn rmidleg to z-axis <15.016484> speed <60.104396> * SPEEDUP_FACTOR / 100;
		
		turn rbackleg to y-axis <-45.137363> speed <120.681319> * SPEEDUP_FACTOR / 100;
		turn rbackleg to z-axis <-5.016484> speed <550.104396> * SPEEDUP_FACTOR / 100;
		
		sleep 200 * 100 / SPEEDUP_FACTOR;
	}
	
	// only vertical
	if( bMoving )
	{
		turn rmid2 to z-axis <0.000000> speed <80.000000> * SPEEDUP_FACTOR / 100;
		turn lmid2 to z-axis <0.000000> speed <80.000000> * SPEEDUP_FACTOR / 100;

		turn lfrontleg to z-axis <5.016484> speed <150.104396> * SPEEDUP_FACTOR / 100;

		//turn lmidleg to z-axis <-15.016484> speed <60.104396> * SPEEDUP_FACTOR / 100;

		turn lbackleg to z-axis <5.016484> speed <150.104396> * SPEEDUP_FACTOR / 100;
		
		//turn rfrontleg to z-axis <15.016484> speed <60.104396> * SPEEDUP_FACTOR / 100;
		
		turn rmidleg to z-axis <-5.016484> speed <150.104396> * SPEEDUP_FACTOR / 100;
		
		//turn rbackleg to z-axis <15.016484> speed <60.104396> * SPEEDUP_FACTOR / 100;
		
		
		sleep 200 * 100 / SPEEDUP_FACTOR;
	}
	
}


Stop()
{
	turn base to z-axis <0.000000> speed <7.000000>;
	turn base to x-axis <0.000000> speed <7.000000>;
	turn lfrontleg to y-axis <0.000000> speed <237.000000>;
	turn lfrontleg to z-axis <0.000000> speed <237.000000>;
	turn lmidleg to y-axis <0.000000> speed <237.000000>;
	turn lmidleg to z-axis <0.000000> speed <237.000000>;
	turn lbackleg to y-axis <0.000000> speed <237.000000>;
	turn lbackleg to z-axis <0.000000> speed <237.000000>;
	turn rbackleg to y-axis <0.000000> speed <237.000000>;
	turn rbackleg to z-axis <0.000000> speed <237.000000>;
	turn rmidleg to y-axis <0.000000> speed <237.000000>;
	turn rmidleg to z-axis <0.000000> speed <237.000000>;
	turn rfrontleg to y-axis <0.000000> speed <237.000000>;
	turn rfrontleg to z-axis <0.000000> speed <237.000000>;
	turn lbackleg to y-axis <20.000000> speed <300.000000>;
	turn rbackleg to y-axis <-20.000000> speed <300.000000>;
	turn rfrontleg to y-axis <30.000000> speed <300.000000>;
	turn lfrontleg to y-axis <-30.000000> speed <300.000000>;

}


MotionControl()
{
	while( TRUE )
	{
		if( bMoving )
		{
			justmoved=TRUE;
			call-script walk();
		}
		if( !bMoving )
		{
			if(justmoved)
			{
				call-script Stop();
				justmoved=FALSE;
			}
			sleep 100;
		}
	}
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

Create()
{
	
	bMoving = FALSE;
	justmoved = FALSE;
	nanopiece=111;
	bBuilding = FALSE;
	start-script MotionControl();
	start-script SmokeUnit();
	start-script BuildFX();
}

RestoreAfterDelay()
{
	sleep DEFAULT_BUILDER_RESTORE_DELAY;
	turn turret to y-axis <0.000000> speed <100.000000>;
	wait-for-turn turret around y-axis;
	
}

QueryNanoPiece(piecenum)
{
	if( nanopiece == 111 )
	{
		piecenum = beam1;
		nanopiece = 222;
		return (0);
	}
	if( nanopiece == 222 )
	{
		piecenum = beam2;
		nanopiece = 111;
		return (0);
	}
}


StartBuilding(heading, pitch)
{
	bAiming = TRUE;
	signal SIG_AIM;
	turn turret to y-axis heading speed <300.071429>;
	wait-for-turn turret around y-axis;
	bBuilding = TRUE;
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	set INBUILDSTANCE to 0;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bBuilding = FALSE;
	start-script RestoreAfterDelay();
}

Killed(severity, corpsetype)
{
	if( severity <= 50 )
	{
		explode turret type SHATTER;
		return (1);
	}
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rmid2 type SHATTER;
	explode rback2 type SHATTER;
	explode sphere type SHATTER;
	explode sphere2 type SHATTER;
	return(2);
}
