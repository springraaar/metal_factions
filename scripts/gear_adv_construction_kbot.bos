#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SPEEDUP_FACTOR 160

piece  base, torso, left,right,t2, hips, leg1,bleg,leg2,bleg2,leg3,bleg3,leg4,bleg4,legsup1, legsup2, legsup3, legsup4, nano, beam, nano2, beam2, t3;

static-var  bMoving,bAiming, restore_delay, nanopiece, justmoved, bBuilding;

// Signal definitions
#define SIG_AIM				2



SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

BuildFX()
{
	while(TRUE)
	{
		if( bBuilding )
		{
			emit-sfx 1024 + 0 from beam;
			emit-sfx 1024 + 0 from beam2;
		}
		sleep 100;
	}
	return (0);
}

walk()
{
	if( bMoving )
	{
		/* X */
		turn hips to x-axis <-3.000000> speed <20.000000> * SPEEDUP_FACTOR / 100;
			
		/* Y */
		turn leg4 to y-axis <-80.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;

		turn leg2 to y-axis <-35.000000> speed <120.000000> * SPEEDUP_FACTOR / 100;

		turn leg3 to y-axis <5.000000> speed <140.000000> * SPEEDUP_FACTOR / 100;
		
		turn leg1 to y-axis <25.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;

		/* Z */
		turn bleg4 to z-axis <-20.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;
		turn bleg to z-axis <-20.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;
		turn hips to z-axis <3.000000> speed <20.000000> * SPEEDUP_FACTOR / 100;

		/* move */
		move hips to x-axis [-0.2500000] speed [2.000000] * SPEEDUP_FACTOR / 100;
		move hips to z-axis [-0.2500000] speed [2.000000] * SPEEDUP_FACTOR / 100;
		
		
		turn leg4 to z-axis <-20.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;
		sleep 100 * 100 / SPEEDUP_FACTOR;
		turn leg4 to z-axis <0.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;
		sleep 100 * 100 / SPEEDUP_FACTOR;

	}
	if( bMoving )
	{
		/* X */
		turn hips to x-axis <3.000000> speed <20.000000> * SPEEDUP_FACTOR / 100;
		
		/* Y */
		turn leg4 to y-axis <-35.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;

		turn leg2 to y-axis <-90.000000> speed <180.000000> * SPEEDUP_FACTOR / 100;

		turn leg3 to y-axis <15.000000> speed <140.000000> * SPEEDUP_FACTOR / 100;
		
		turn leg1 to y-axis <-5.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;

		/* Z */
		turn bleg4 to z-axis <0.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;
		turn bleg to z-axis <0.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;
		turn hips to z-axis <3.000000> speed <20.000000> * SPEEDUP_FACTOR / 100;
		
		/* move */
		move hips to x-axis [0.000000] speed [2.000000] * SPEEDUP_FACTOR / 100;
		move hips to z-axis [0.000000] speed [2.000000] * SPEEDUP_FACTOR / 100;
		
		turn leg1 to z-axis <-20.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;
		sleep 100 * 100 / SPEEDUP_FACTOR;
		turn leg1 to z-axis <0.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;
		sleep 100 * 100 / SPEEDUP_FACTOR;

	}
	if( bMoving )
	{
		/* X */
		turn hips to x-axis <-3.000000> speed <20.000000> * SPEEDUP_FACTOR / 100;

		/* Y */
		turn leg4 to y-axis <-5.000000> speed <140.000000> * SPEEDUP_FACTOR / 100;

		turn leg2 to y-axis <-25.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;

		turn leg3 to y-axis <80.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;
		
		turn leg1 to y-axis <35.000000> speed <120.000000> * SPEEDUP_FACTOR / 100;

		/* Z */
		turn bleg2 to z-axis <20.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;
		turn bleg3 to z-axis <20.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;
		turn hips to z-axis <-3.000000> speed <20.000000> * SPEEDUP_FACTOR / 100;


		/* move */
		move hips to x-axis [0.2500000] speed [2.000000] * SPEEDUP_FACTOR / 100;
		move hips to z-axis [-0.2500000] speed [2.000000] * SPEEDUP_FACTOR / 100;
		
		turn leg3 to z-axis <20.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;
		sleep 100 * 100 / SPEEDUP_FACTOR;
		turn leg3 to z-axis <0.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;
		sleep 100 * 100 / SPEEDUP_FACTOR;

	}
	if( bMoving )
	{
		turn hips to x-axis <3.000000> speed <20.000000> * SPEEDUP_FACTOR / 100;

		/* Y */
		turn leg4 to y-axis <-15.000000> speed <140.000000> * SPEEDUP_FACTOR / 100;

		turn leg2 to y-axis <5.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;

		turn leg3 to y-axis <35.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;

		turn leg1 to y-axis <90.000000> speed <180.000000> * SPEEDUP_FACTOR / 100;			

		/* Z */
		turn bleg3 to z-axis <0.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;
		turn bleg2 to z-axis <0.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;
		turn hips to z-axis <3.000000> speed <20.000000> * SPEEDUP_FACTOR / 100;

		/* move */
		move hips to x-axis [0.000000] speed [2.000000] * SPEEDUP_FACTOR / 100;
		move hips to z-axis [0.000000] speed [2.000000] * SPEEDUP_FACTOR / 100;

		turn leg2 to z-axis <20.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;
		sleep 100 * 100 / SPEEDUP_FACTOR;
		turn leg2 to z-axis <0.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;
		sleep 100 * 100 / SPEEDUP_FACTOR;
	}
}

Stop()
{
				turn leg1 to x-axis <0.000000> speed <360.000000>;
				turn leg2 to x-axis <0.000000> speed <360.000000>;
				turn leg3 to x-axis <0.000000> speed <360.000000>;
				turn leg4 to x-axis <0.000000> speed <360.000000>;
				turn leg1 to y-axis <45.000000> speed <360.000000>;
				turn leg2 to y-axis <-45.000000> speed <360.000000>;
				turn leg3 to y-axis <45.000000> speed <360.000000>;
				turn leg4 to y-axis <-45.000000> speed <360.000000>;
			
				turn leg1 to z-axis <0.000000> speed <360.000000>;
				turn leg2 to z-axis <0.000000> speed <360.000000>;
				turn leg3 to z-axis <0.000000> speed <360.000000>;
				turn leg4 to z-axis <0.000000> speed <360.000000>;
				turn hips to z-axis <0.000000> speed <260.000000>;
				turn hips to x-axis <0.000000> speed <360.000000>;
	
				move hips to x-axis [0.000000] speed [3.000000];
				move hips to z-axis [0.000000] speed [3.000000];

				turn bleg2 to z-axis <0.000000> speed <160.000000>;
				turn bleg4 to z-axis <0.000000> speed <160.000000>;
				turn bleg3 to z-axis <0.000000> speed <160.000000>;
				turn bleg to z-axis <0.000000> speed <160.000000>;

}

MotionControl()
{
	while( TRUE )
	{
		if( bMoving )
		{
			justmoved=TRUE;
			call-script walk();
		}
		if( !bMoving )
		{
			if(justmoved)
			{
				call-script Stop();
				justmoved=FALSE;
			}
			sleep 100;
		}
	}
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

Create()
{
	
	bMoving = FALSE;
	justmoved = FALSE;
	bBuilding = FALSE;
	nanopiece = [0];
	start-script MotionControl();
	start-script SmokeUnit();
	start-script BuildFX();
	
}

RestoreAfterDelay()
{
	sleep DEFAULT_BUILDER_RESTORE_DELAY;
	turn torso to y-axis <0.000000> speed <100.000000>;
	wait-for-turn torso around y-axis;
	
}

QueryNanoPiece(piecenum)
{
	if( nanopiece == [0])
	{
		piecenum = beam;
		nanopiece = [1];
		return 0;
	}
	if( nanopiece == [1])
	{
		piecenum = beam2;
		nanopiece = [0];
		return 0;
	}
}


StartBuilding(heading, pitch)
{
	bAiming = TRUE;
	signal SIG_AIM;
	turn torso to y-axis heading speed <300.071429>;
	wait-for-turn torso around y-axis;
	bBuilding = TRUE;
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	set INBUILDSTANCE to 0;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bBuilding = FALSE;
	start-script RestoreAfterDelay();
}



Killed(severity, corpsetype)
{
	if( severity <= 50 )
	{
		explode torso type SHATTER;
		return (1);
	}
	explode legsup1 type SHATTER;
	explode legsup2 type SHATTER;
	explode legsup3 type SHATTER;
	explode legsup4 type SHATTER;
	explode torso type SHATTER;
	return (2);
}
