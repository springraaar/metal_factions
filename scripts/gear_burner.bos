#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  plasground, base1, base2, base3,turret, sleeve, barrel, flare, cover;

static-var  isOpen;

// Signal definitions
#define SIG_AIM				2

lua_stopFiring() { return 0; }

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base1;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Open()
{
	set ARMORED to FALSE;
	//move turret to y-axis [10.500000] speed [10.000000];
	move base3 to y-axis [14.000000] speed [20.000000];
	//wait-for-move turret along y-axis;
	wait-for-move base3 along y-axis;

	//move sleeve to z-axis [3.000000] speed [5.000000];
	//move barrel to z-axis [3.700000] speed [5.000000];
	//wait-for-move sleeve along z-axis;

	turn turret to y-axis <0.000000> speed <200.000000>;
	turn sleeve to x-axis <0.000000> speed <200.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;

	isOpen = TRUE;
	return (0);
}

Close()
{
	isOpen = FALSE;
	turn turret to y-axis <0.000000> speed <200.000000>;
	turn sleeve to x-axis <0.000000> speed <200.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	//move sleeve to z-axis [0.000000] speed [5.000000];
	//move barrel to z-axis [0.000000] speed [5.000000];
	//wait-for-move sleeve along z-axis;
	//move turret to y-axis [0.000000] speed [10.000000];
	move base3 to y-axis [0.000000] speed [20.000000];
	//wait-for-move turret along y-axis;
	wait-for-move base3 along y-axis;
	
	set ARMORED to TRUE;
	return (0); 
}

RestoreAfterDelay()
{
	if((get STANDINGFIREORDERS) > 0)
	{
		sleep DEFAULT_WEAPON_RESTORE_DELAY;
	} 
	else 
	{
		sleep 600;
	}
	call-script Close();
}

// if fire state changes to hold fire, force closure
checkClose(fireState,previousFireState)
{
	while (TRUE)
	{
		fireState = (get STANDINGFIREORDERS);
		
		if (fireState == 0 && previousFireState > 0) 
		{
			signal SIG_AIM;
			call-script lua_stopFiring();
			call-script RestoreAfterDelay();
		}
	
		previousFireState = fireState;
		sleep 100;
	}
}
Create()
{
	hide flare;
	isOpen = FALSE;
	set ARMORED to TRUE;
	start-script SmokeUnit();
	start-script checkClose();
	return (0);
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	if( ! isOpen)
	{
		call-script Open();
	}
	turn turret to y-axis heading speed <220.000000>;
	//turn sleeve to x-axis <0.000000> - pitch speed <280.000000>;
	wait-for-turn turret around y-axis;
	//wait-for-turn sleeve around x-axis;
	
	start-script RestoreAfterDelay();
	return (1);
}

Shot1()
{
	emit-sfx 1024 + 1 from flare;
	return (0);
}

QueryPrimary(piecenum)
{
	piecenum = flare;
	return (0);
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 50 )
	{
		return (1);
	}
	explode base1 type SHATTER;
	return (2);
}
