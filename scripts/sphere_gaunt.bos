#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SPEEDUP_FACTOR 150

#define HEADING_TOLERANCE	<15>
#define PITCH_TOLERANCE		<15>

piece  groundx2,torso, gunflare, hips, l_thigh, r_thigh,head, luparm, ruparm, larm, rleg,
       rfoot, lleg, lfoot, lemg, l1, r1, r2,rgun,t2,eye,tbase;

static-var  bMoving, bAiming, mASpdFactor;

#include "aimhelper1.h"

// Signal definitions
#define SIG_AIM				2


MotionSpeedControl(minSpeed, maxSpeed,currentSpeed)
{
	maxSpeed = get MAX_SPEED;
	currentSpeed = 0;
	mASpdFactor = SPEEDUP_FACTOR;
	minSpeed = 3 * SPEEDUP_FACTOR / 4;
	
	while(TRUE)
	{
		currentSpeed = get CURRENT_SPEED;
		mASpdFactor = SPEEDUP_FACTOR * currentSpeed / maxSpeed;
		if ( mASpdFactor < minSpeed )
		{
			mASpdFactor = minSpeed;
		}

		sleep 60;
	}
}

walk()
{
	if( bMoving )
	{
		turn hips to x-axis <12.534066> speed <50.000000> * mASpdFactor / 100;
		turn r_thigh to x-axis <19.159341> speed <460.000000> * mASpdFactor / 100;
		turn l_thigh to x-axis <-45.346154> speed <460.000000> * mASpdFactor / 100;
		turn luparm to x-axis <30.093407> speed <140.000000> * mASpdFactor / 100;
		turn lleg to x-axis <45.912088> speed <460.000000> * mASpdFactor / 100;
		turn lfoot to x-axis <-4.500000> speed <220.000000> * mASpdFactor / 100;
		turn rleg to x-axis <30.280220> speed <460.000000> * mASpdFactor / 100;
		turn rfoot to x-axis <-27.560440> speed <220.000000> * mASpdFactor / 100;
		if (!bAiming)
		{
			turn tbase to x-axis <0.934066> speed <40.000000> * mASpdFactor / 100;
			turn torso to y-axis <5.901099> speed <60.000000> * mASpdFactor / 100;
		}
		sleep 200 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.4]  speed [3.000000] * mASpdFactor / 100;
		turn hips to x-axis <0.500000>  speed <50.000000> * mASpdFactor / 100;
		turn r_thigh to x-axis <-11.681319>  speed <460.000000> * mASpdFactor / 100;
		turn l_thigh to x-axis <-29.434066>  speed <460.000000> * mASpdFactor / 100;
		turn luparm to x-axis <19.967033>  speed <140.000000> * mASpdFactor / 100;
		turn lfoot to x-axis <-9.560440>  speed <220.000000> * mASpdFactor / 100;
		turn rleg to x-axis <56.192308>  speed <460.000000> * mASpdFactor / 100;
		if (!bAiming) 
		{
			turn tbase to x-axis <5.500000>  speed <40.000000> * mASpdFactor / 100;
			turn torso to y-axis <0.000000>  speed <60.000000> * mASpdFactor / 100;
		}
		sleep 160 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.3]  speed [3.000000] * mASpdFactor / 100;
		turn hips to x-axis <0.648352>  speed <50.000000> * mASpdFactor / 100;
		turn r_thigh to x-axis <-45.626374>  speed <460.000000> * mASpdFactor / 100;
		turn l_thigh to x-axis <8.868132>  speed <460.000000> * mASpdFactor / 100;
		turn luparm to x-axis <0.000000> speed <140.000000> * mASpdFactor / 100;
		turn lleg to x-axis <10.560440>  speed <460.000000> * mASpdFactor / 100;
		turn lfoot to x-axis <-16.027473>  speed <220.000000> * mASpdFactor / 100;
		turn rleg to x-axis <55.912088>  speed <460.000000> * mASpdFactor / 100;
		turn rfoot to x-axis <-5.626374>  speed <220.000000> * mASpdFactor / 100;
		if (!bAiming)
		{
			turn tbase to x-axis <5.648352>  speed <40.000000> * mASpdFactor / 100;
			turn torso to y-axis <-5.901099> speed <60.000000> * mASpdFactor / 100;
		}
		sleep 160 * 100 / SPEEDUP_FACTOR;
	}

	if( bMoving )
	{
		move hips to y-axis [-1.0]  speed [3.000000] * mASpdFactor / 100;
		turn hips to x-axis <12.534066>  speed <50.000000> * mASpdFactor / 100;
		turn r_thigh to x-axis <-48.159341>  speed <460.000000> * mASpdFactor / 100;
		turn l_thigh to x-axis <20.560440>  speed <460.000000> * mASpdFactor / 100;
		turn luparm to x-axis <-10.126374>  speed <140.000000> * mASpdFactor / 100;
		turn lleg to x-axis <24.780220>  speed <460.000000> * mASpdFactor / 100;
		turn lfoot to x-axis <-26.434066>  speed <220.000000> * mASpdFactor / 100;
		turn rleg to x-axis <54.659341>  speed <460.000000> * mASpdFactor / 100;
		turn rfoot to x-axis <-8.434066>  speed <220.000000> * mASpdFactor / 100;
		if (!bAiming)
		{
			turn tbase to x-axis <0.934066>  speed <40.000000> * mASpdFactor / 100;
			turn torso to y-axis <-5.901099>  speed <60.000000> * mASpdFactor / 100;
		}
		sleep 200 * 100 / SPEEDUP_FACTOR;
	}

	if( bMoving )
	{
		move hips to y-axis [-0.38]  speed [3.000000] * mASpdFactor / 100;
		turn hips to x-axis <0.500000>  speed <50.000000> * mASpdFactor / 100;
		turn r_thigh to x-axis <-28.593407>  speed <460.000000> * mASpdFactor / 100;
		turn l_thigh to x-axis <-13.527473>  speed <460.000000> * mASpdFactor / 100;
		turn luparm to x-axis <0.000000>  speed <140.000000> * mASpdFactor / 100;
		turn lleg to x-axis <67.170330>  speed <460.000000> * mASpdFactor / 100;
		turn rleg to x-axis <39.005495>  speed <460.000000> * mASpdFactor / 100;
		turn rfoot to x-axis <-15.181319>  speed <220.000000> * mASpdFactor / 100;
		if (!bAiming) 
		{
			turn tbase to x-axis <5.500000>  speed <40.000000> * mASpdFactor / 100;
			turn torso to y-axis <0.000000>  speed <60.000000> * mASpdFactor / 100;
		}
		
		sleep 160 * 100 / SPEEDUP_FACTOR;
	}
	move hips to y-axis [-0.28]  speed [3.000000] * mASpdFactor / 100;
	turn hips to x-axis <0.648352>  speed <50.000000> * mASpdFactor / 100;
	turn r_thigh to x-axis <18.027473>  speed <460.000000> * mASpdFactor / 100;
	turn l_thigh to x-axis <-43.379121>  speed <460.000000> * mASpdFactor / 100;
	turn luparm to x-axis <20.527473>  speed <140.000000> * mASpdFactor / 100;
	turn lleg to x-axis <59.571429> speed <460.000000> * mASpdFactor / 100;
	turn lfoot to x-axis <-23.060440> speed <220.000000> * mASpdFactor / 100;
	turn rleg to x-axis <8.868132>  speed <460.000000> * mASpdFactor / 100;
	turn rfoot to x-axis <-18.846154> speed <220.000000> * mASpdFactor / 100;
	if (!bAiming) 
	{
		turn tbase to x-axis <5.648352>  speed <40.000000> * mASpdFactor / 100;
		turn torso to y-axis <5.901099> speed <60.000000> * mASpdFactor / 100;		
	}
	sleep 160 * 100 / SPEEDUP_FACTOR;
}


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			call-script walk();
			justmoved = TRUE;
		}
		if( !moving )
		{
			if( justmoved )
			{
				move hips to y-axis [0]  speed [5.000000];
				turn head to y-axis <0.000000> speed <157.313187>;
				turn tbase to x-axis <0.000000> speed <57.313187>;
				turn hips to x-axis <0.0> speed <150.000000>;
				turn r_thigh to x-axis <0.000000> speed <200.038462>;
				turn rleg to x-axis <0.000000> speed <200.038462>;
				turn rfoot to x-axis <0.000000> speed <200.038462>;
				turn l_thigh to x-axis <0.000000> speed <200.038462>;
				turn lleg to x-axis <0.000000> speed <200.038462>;
				turn lfoot to x-axis <0.000000> speed <200.038462>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.016484>;
					turn ruparm to x-axis <0.000000> speed <200.038462>;
					turn larm to x-axis <0.000000> speed <200.038462>;
					turn luparm to x-axis <0.000000> speed <200.038462>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	bMoving = FALSE;
	bAiming = FALSE;
	call-script stopAimHelper1(<1000>,<1000>);
	start-script MotionSpeedControl();
	start-script MotionControl();
	start-script SmokeUnit();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep DEFAULT_WEAPON_RESTORE_DELAY;
	call-script stopAimHelper1(<150>,<150>);
	turn torso to y-axis <0.000000> speed <150.016484>;
	turn ruparm to x-axis <0.000000> speed <150.005495>;
	turn luparm to x-axis <0.000000> speed <150.005495>;
	wait-for-turn torso around y-axis;
	bAiming = FALSE;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	piecenum = gunflare;
}

FirePrimary()
{
	emit-sfx 1024 from gunflare;
}

AimPrimary(heading, pitch)
{
	call-script updateAimHelper1(heading,pitch,<80>,<80>,HEADING_TOLERANCE,PITCH_TOLERANCE);
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;

	turn torso to y-axis heading speed <100.027473>;
	turn ruparm to x-axis <0.000000> - pitch speed <100.038462>;
	turn tbase to x-axis <0.000000> speed <100.038462>;
	if (!aimReady1)
	{
		wait-for-turn torso around y-axis;
		wait-for-turn ruparm around x-axis;
	}
	start-script RestoreAfterDelay();
	return (1);
}



Killed(severity, corpsetype)
{
	if( severity <= 35 )
	{
		explode rgun type SHATTER;		
		explode torso type SHATTER;
		return (1);
	}
	explode lemg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode larm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode l_thigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode r_thigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	return (2);
}
