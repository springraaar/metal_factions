#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define HEADING_TOLERANCE	<25>
#define PITCH_TOLERANCE		<15>

#define SPEEDUP_FACTOR 150

piece  base, turret,sleeve,barrel ,flash,t1,wheel1,t2,wheel2,t3,wheel3,bb;

#include "aimhelper1.h"

// Signal definitions
#define SIG_AIM				2

#include "wheelspeed.h"


SpinWheels(last)
{
	last = 0;
	while ( TRUE )
	{
		
		if ( last != (wheelSpeed / 8) )
		{
			spin t1 around x-axis speed wheelSpeed; // accelerate wheelAcceleration;
			spin t2 around x-axis speed wheelSpeed; //accelerate wheelAcceleration;
			spin t3 around x-axis speed wheelSpeed; //accelerate wheelAcceleration;
			last = wheelSpeed / 8;
		}
		sleep 100;
	}
	return (0);
}

StopWheels()
{
	stop-spin t1 around x-axis decelerate <12.000000>;
	stop-spin t2 around x-axis decelerate <12.000000>;
	stop-spin t3 around x-axis decelerate <12.000000>;
	return (0);
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}



HitByWeapon(Func_Var_1, Func_Var_2)
{
	turn base to z-axis Func_Var_2 speed <105.016484>;
	turn base to x-axis Func_Var_1 speed <105.016484>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <30.005495>;
	turn base to x-axis <0.000000> speed <30.005495>;
}

Create()
{
	call-script stopAimHelper1(<1000>,<1000>);
	start-script WheelSpeedControl();
	start-script SpinWheels();
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep DEFAULT_WEAPON_RESTORE_DELAY;
	call-script stopAimHelper1(<200>,<200>);
	turn turret to y-axis <0.000000> speed <200.016484>;
	turn sleeve to x-axis <0.000000> speed <200.005495>;
}

AimPrimary(heading, pitch)
{
	call-script updateAimHelper1(heading,pitch,<520>,<550>,HEADING_TOLERANCE,PITCH_TOLERANCE);
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <520.038462>;
	turn sleeve to x-axis <0.000000> - pitch speed <550.000000>;
	if (!aimReady1)
	{
		wait-for-turn turret around y-axis;
		wait-for-turn sleeve around x-axis;
	}
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	emit-sfx 1024 + 0 from flash;
	return 0;
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = flash;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 35 )
	{
		explode sleeve type SHATTER;
		explode turret type SHATTER;
		explode barrel type SHATTER;
		return (1);
	}

	explode sleeve type SHATTER;
	explode turret type SHATTER;
	explode barrel type SHATTER;
	explode t1 type SHATTER;
	explode t2 type SHATTER;
	explode wheel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode wheel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode wheel3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	return (2);
}
