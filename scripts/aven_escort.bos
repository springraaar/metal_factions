#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, jammer, fork, wake1, wake2, hull, bottom;

// Signal definitions
#define SIG_MOVE			2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	dont-cache fork;
	dont-shade fork;
	dont-cache base;
	dont-shade base;
	start-script SmokeUnit();
}

Activate()
{
	spin jammer around z-axis speed <360.021978>;
}

Deactivate()
{
	spin jammer around z-axis speed <0.000000>;
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		sleep 250;
	}
}

StopMoving()
{
	signal SIG_MOVE;
}


Killed(severity, corpsetype)
{
	if( severity <= 50 )
	{
		explode fork type SHATTER | BITMAP2;
		return (1);
	}
	explode base type SHATTER;
	explode fork type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	return (2);
}
